const t={currentPlayCount:null,playCount:null,currentIndex:0,stopIndex:null,slowDownStartindex:null,isSlowdown:!1,isPlay:!1,isStop:!1,countTimer:null},e={wrapperElement:null,targetElement:null,itemElements:null,speed:100,stopIndex:0,playCount:3,autoStart:!1,stopCallback:()=>{},startCallback:()=>{},slowDownCallback:()=>{}};class n{constructor(t){this.updateOption(t)}init(){const{options:t}=this;t.autoStart&&this.start()}updateOption(n){Object.assign(this,{options:Object.assign({},t,e,n)})}start(){const{options:t}=this;t.countTimer&&clearTimeout(t.countTimer),t.isPlay||(t.isPlay=!0),t.startCallback(),this.roll(t.playCount,t.speed)}stop(){const{options:t}=this;t.isSlowdown||(t.countTimer&&clearTimeout(t.countTimer),t.stopCallback(),t.itemElements.length>=t.stopIndex&&t.stopIndex>=0&&(t.isSlowdown=!0,t.currentPlayCount=0,t.itemElements[t.currentIndex].classList.remove("is-active"),this.roll(Math.max(1,Math.ceil(20/t.itemElements.length)),t.speed),t.slowDownCallback()))}reset(){const{options:e}=this;e.playCount=t.playCount,e.currentIndex=t.currentIndex,e.slowDownStartindex=t.slowDownStartindex,e.isSlowdown=t.isSlowdown,e.isStop=t.isStop,e.countTimer&&(clearTimeout(e.countTimer),e.countTimer=null)}roll(t,e){const{options:n}=this;if(n.isSlowdown){if(n.currentPlayCount>t&&n.currentIndex-1===n.stopIndex)return void this.reset();e=Math.floor(e+t*(n.currentIndex*n.currentPlayCount))}else if(n.currentPlayCount>t)return void this.stop();this.output(),n.currentIndex++,n.currentIndex>=n.itemElements.length&&(n.currentIndex=0,n.currentPlayCount++),n.countTimer=setTimeout((()=>{this.roll(t,e)}),e)}output(){const{options:t}=this,e="is-active";let n=t.currentIndex-1;n<0&&(n=t.itemElements.length-1),t.itemElements[n].classList.remove(e),t.itemElements[t.currentIndex].classList.add(e)}}export{n as default};
//# sourceMappingURL=slowingDownRotation.esm.min.js.map
