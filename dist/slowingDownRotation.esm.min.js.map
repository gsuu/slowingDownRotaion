{"version":3,"file":"slowingDownRotation.esm.min.js","sources":["../lib/slowingDownRotation.js"],"sourcesContent":["const defaultProperty = {\r\n  currentPlayCount: 0,\r\n  playCount: 0,\r\n  currentIndex : -1,\r\n  stopIndex: null,\r\n  slowDownStartindex : null,\r\n\r\n  isSlowdown : false,\r\n  isPlay: false,\r\n  isStop : false,\r\n  \r\n  countTimer: null,\r\n}\r\n\r\nconst defaultSetting = {\r\n  wrapperElement : null,\r\n  targetElement : null,\r\n  itemElements : null,\r\n  speed: 100,\r\n  startIndex: 2,\r\n  stopIndex : 0,\r\n  playCount: 3,\r\n  autoStart: false,\r\n  reverse: false,\r\n  stopCallback: () => {},\r\n  startCallback: () => {},\r\n  slowDownCallback: () => {}\r\n};\r\n\r\nexport default class SlowingDownRotation {\r\n  constructor(options) {\r\n    this.updateOption(options);\r\n  }\r\n\r\n  init() {\r\n    const { options } = this;\r\n\r\n    if(options.autoStart) {\r\n      this.start();\r\n    }\r\n  }\r\n\r\n  updateOption(options) {\r\n    Object.assign(this, {\r\n      options: Object.assign({}, defaultProperty, defaultSetting, options)\r\n    })\r\n    if(!this.options.reverse) {\r\n      this.options.currentIndex = options.startIndex ? options.startIndex - 1 : defaultSetting.startIndex - 1;\r\n    } else {\r\n      this.options.currentIndex = options.startIndex ? options.startIndex: defaultSetting.startIndex;\r\n\r\n    }\r\n  }\r\n\r\n  start() {\r\n    const { options } = this;\r\n\r\n    if(options.countTimer) {\r\n      clearTimeout(options.countTimer)\r\n    }\r\n    \r\n    if(!options.isPlay) {\r\n      options.isPlay = true;\r\n    }\r\n\r\n    options.startCallback();\r\n\r\n    this.roll(options.playCount, options.speed);\r\n  }\r\n\r\n  stop() {\r\n    const { options } = this;\r\n\r\n    if (!options.isSlowdown) {\r\n      if(options.countTimer) {\r\n        clearTimeout(options.countTimer)\r\n      }\r\n\r\n      options.stopCallback();\r\n\r\n      if (options.itemElements.length >= options.stopIndex && options.stopIndex >= 0) {\r\n        options.isSlowdown = true;\r\n        options.currentPlayCount = 0;\r\n        this.roll(Math.max(1, Math.ceil(20 / options.itemElements.length)), options.speed);\r\n        options.slowDownCallback();\r\n      }\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    const { options } = this;\r\n    if(options.countTimer) {\r\n      clearTimeout(options.countTimer);\r\n      options.countTimer = null;\r\n    }\r\n\r\n    options.playCount = defaultProperty.playCount;\r\n    options.currentIndex = options.startIndex - 1;\r\n    options.slowDownStartindex = defaultProperty.slowDownStartindex;\r\n    options.isSlowdown = defaultProperty.isSlowdown;\r\n    options.isStop = defaultProperty.isStop;\r\n  }\r\n\r\n  roll(_count, _speed) {\r\n    const { options } = this;\r\n\r\n    if (options.isSlowdown) {\r\n      if (options.currentPlayCount > _count && options.currentIndex === options.stopIndex) {\r\n        this.reset();\r\n        return;\r\n      }\r\n      _speed = Math.floor(_speed + (_count * (options.currentIndex * options.currentPlayCount)));\r\n    } else {\r\n      if (options.currentPlayCount === _count) {\r\n        this.stop();\r\n        return;\r\n      }\r\n    }\r\n    this.controllIndex();\r\n\r\n    options.countTimer = setTimeout(() => {\r\n      this.roll(_count, _speed)\r\n    }, _speed);\r\n  }\r\n\r\n  controllIndex() {\r\n    const { options } = this;\r\n    const index = {\r\n      xPrev: null,\r\n      prev: null, \r\n      current: null, \r\n      next: null, \r\n      xNext: null\r\n    }\r\n    if(!options.reverse) {\r\n      options.currentIndex++;\r\n      if(options.currentIndex === options.itemElements.length) {\r\n        options.currentIndex = 0;\r\n        options.currentPlayCount++;\r\n      }\r\n\r\n      index.prev = options.currentIndex - 1;\r\n      if(index.prev < 0) {\r\n        index.prev = options.itemElements.length - 1;\r\n      }\r\n      \r\n      index.xPrev = index.prev - 1;\r\n      if(index.xPrev < 0) {\r\n        index.xPrev = options.itemElements.length - 1;\r\n      }\r\n\r\n      index.next = options.currentIndex + 1;\r\n      if(index.next === options.itemElements.length) {\r\n        index.next = 0;\r\n      }\r\n\r\n      index.current = options.currentIndex;\r\n    } else {\r\n      options.currentIndex--;\r\n      if(options.currentIndex === -1) {\r\n        options.currentIndex = options.itemElements.length - 1;\r\n      }\r\n\r\n      if(options.currentIndex === 0) {\r\n        options.currentPlayCount++;\r\n      }\r\n\r\n      index.prev = options.currentIndex - 1;\r\n      if(index.prev < 0) {\r\n        index.prev = options.itemElements.length - 1;\r\n      }\r\n\r\n      index.next = options.currentIndex + 1;\r\n      if(index.next === options.itemElements.length) {\r\n        index.next = 0;\r\n      }\r\n      if(index.next < 0) {\r\n        index.next = options.itemElements.length - 1;\r\n      }\r\n\r\n      index.xNext = index.next + 1;\r\n      if(index.xNext === options.itemElements.length) {\r\n        index.xNext = 0;\r\n      }\r\n     \r\n      index.current = options.currentIndex;\r\n    }\r\n\r\n    this.output(index);\r\n  }\r\n\r\n  output(index) {\r\n    const { options } = this;\r\n    const { xPrev, xNext, prev, current, next } = index;\r\n    const activeClass = 'sdr-active';\r\n    const prevClass = 'sdr-prev';\r\n    const nextClass = 'sdr-next';\r\n\r\n    if(!options.reverse) {\r\n      options.itemElements[xPrev].classList.remove(prevClass);\r\n      options.itemElements[prev].classList.add(prevClass);\r\n      options.itemElements[prev].classList.remove(activeClass);\r\n      options.itemElements[current].classList.add(activeClass);\r\n      options.itemElements[current].classList.remove(nextClass);\r\n      options.itemElements[next].classList.add(nextClass);\r\n    } else {\r\n      options.itemElements[current].classList.remove(prevClass);\r\n      options.itemElements[next].classList.remove(activeClass);\r\n      options.itemElements[xNext].classList.remove(nextClass);\r\n      options.itemElements[current].classList.add(activeClass);\r\n      options.itemElements[next].classList.add(nextClass);\r\n      options.itemElements[prev].classList.add(prevClass);\r\n    }\r\n  }\r\n}\r\n"],"names":["defaultProperty","currentPlayCount","playCount","currentIndex","stopIndex","slowDownStartindex","isSlowdown","isPlay","isStop","countTimer","defaultSetting","wrapperElement","targetElement","itemElements","speed","startIndex","autoStart","reverse","stopCallback","startCallback","slowDownCallback","SlowingDownRotation","constructor","options","this","updateOption","init","start","Object","assign","clearTimeout","roll","stop","length","Math","max","ceil","reset","_count","_speed","floor","controllIndex","setTimeout","index","xPrev","prev","current","next","xNext","output","activeClass","prevClass","nextClass","classList","remove","add"],"mappings":"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"}